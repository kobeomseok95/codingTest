# 테스트 1 〉	통과 (0.02ms, 10.2MB)
# 테스트 2 〉	통과 (0.02ms, 10.2MB)
# 테스트 3 〉	통과 (0.05ms, 10.2MB)
# 테스트 4 〉	통과 (0.06ms, 10.2MB)
# 테스트 5 〉	통과 (0.98ms, 10.5MB)
# 테스트 6 〉	통과 (0.98ms, 10.4MB)
# 테스트 7 〉	통과 (0.99ms, 10.4MB)
# 테스트 8 〉	통과 (1.23ms, 10.4MB)
# 테스트 9 〉	통과 (1.02ms, 10.7MB)
# 테스트 10 〉	통과 (0.93ms, 10.3MB)
# 테스트 11 〉	통과 (0.64ms, 10.3MB)
# 테스트 12 〉	통과 (0.62ms, 10.3MB)
# 테스트 13 〉	통과 (1.04ms, 10.3MB)
# 테스트 14 〉	통과 (3.03ms, 10.5MB)
# 테스트 15 〉	통과 (0.02ms, 10.3MB)
# 테스트 16 〉	통과 (0.02ms, 10.3MB)
# 테스트 17 〉	통과 (0.10ms, 10.3MB)
# 테스트 18 〉	통과 (0.10ms, 10.2MB)
# 테스트 19 〉	통과 (1.04ms, 10.7MB)
# 테스트 20 〉	통과 (0.97ms, 10.3MB)
# 테스트 21 〉	통과 (0.93ms, 10.3MB)
# 테스트 22 〉	통과 (1.04ms, 10.4MB)
# 테스트 23 〉	통과 (0.97ms, 10.5MB)
# 테스트 24 〉	통과 (1.01ms, 10.5MB)
# 테스트 25 〉	통과 (79.38ms, 47.5MB)
# 테스트 26 〉	통과 (84.09ms, 49.8MB)
# 테스트 27 〉	통과 (93.68ms, 50.1MB)
# 테스트 28 〉	통과 (96.26ms, 51.5MB)
# 테스트 29 〉	통과 (110.00ms, 51.4MB)
# 테스트 30 〉	통과 (84.66ms, 44.5MB)
# 테스트 31 〉	통과 (77.58ms, 52.2MB)
# 테스트 32 〉	통과 (65.68ms, 47.6MB)
def solution(record):
    answer = []
    namespace = {}
    printer = {'Enter': '님이 들어왔습니다.', 'Leave': '님이 나갔습니다.'}
    for r in record:
        rr = r.split()
        if rr[0] in ['Enter', 'Change']:
            namespace[rr[1]] = rr[2]

    for r in record:
        rr = r.split()
        if rr[0] != 'Change':
            answer.append(namespace[rr[1]] + printer[rr[0]])

    return answer